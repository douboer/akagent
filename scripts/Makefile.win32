CC = gcc 
MAKE = make
TARGET=test

#源文件
SRCS_DIRS += ./src/core/*.c
SRCS_DIRS += ./src/events/*.c
SRCS_DIRS += ./src/scheduling/*.c
SRCS_DIRS += ./src/os/unix/*.c
SRCS_DIRS += ./src/os/win32/*.c

#添加头文件
HEAD += -I$(shell pwd)/src/core
HEAD += -I$(shell pwd)/src/events
HEAD += -I$(shell pwd)/src/os
HEAD += -I$(shell pwd)/src/scheduling

#编译参数
CFLAGS += $(HEAD)  

#编译选项
CFLAGS += -g -Wall 
CFLAGS += -pipe  -O0 -Wall -g3 -ggdb3
CFLAGS += -Wunused-variable

CFLAGS += -D_WIN32_WINNT=0x501

#编译操作系统制定
CFLAGS += -D__USE_UNIX__

#动态库
LDFLAGS += -lws2_32 -lpthread -lwsock32 -lgdi32 -lwtsapi32

#静态库
LIBS +=

#编译目录
objs_dir=objs
vpath %.c src
source = $(wildcard *.c $(SRCS_DIRS) $(notdir $(wildcard src/*.c)))
objs = $(source:%.c=$(objs_dir)/%.o)

.PHONY: all clean

all: $(TARGET)  
$(TARGET) : $(objs) 
	@echo -e "\033[32mGenerate the ELF file: $(TARGET) \033[0m"
	$(CC) -o $@ $^ $(LIBS) $(LDFLAGS)
$(objs): $(objs_dir)/%.o : %.c
	@echo -e "\033[32mCompile the object file: $<\033[0m"
	$(CC) $(CFLAGS) -o $@ -c $<
clean:
	@echo -e "\033[32mDelete compiled file \033[0m"
	rm -rf $(foreach i,$(shell find ./objs -name "*.o") ,$(i)) $(TARGET) 
